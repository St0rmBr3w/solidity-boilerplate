{
  "address": "0x0087EB397af9E04Ff9872199d63F841474bf2A27",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_greeting",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_greeting",
          "type": "string"
        }
      ],
      "name": "GreetingSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "greet",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "greeting",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_greeting",
          "type": "string"
        }
      ],
      "name": "setGreeting",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_changedGreet",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb5a3b51f92d52a028c20e58227240cb85611f4bba04515848c5f8f678c95bf9d",
  "receipt": {
    "to": null,
    "from": "0x54054EA2db6eDC336cB87966815FD66Cc337f224",
    "contractAddress": "0x0087EB397af9E04Ff9872199d63F841474bf2A27",
    "transactionIndex": 19,
    "gasUsed": "330134",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x2ae8c67497bdb8e4a9e9a9989c17a9d6106775b28d2f52d0f36a172fceb54c47",
    "transactionHash": "0xb5a3b51f92d52a028c20e58227240cb85611f4bba04515848c5f8f678c95bf9d",
    "logs": [],
    "blockNumber": 13549800,
    "cumulativeGasUsed": "1552394",
    "status": 1,
    "byzantium": true
  },
  "args": ["Hallo Welt!"],
  "solcInputHash": "e3ae42348791625229193f07af529dc9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_greeting\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_greeting\",\"type\":\"string\"}],\"name\":\"GreetingSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"greet\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"greeting\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_greeting\",\"type\":\"string\"}],\"name\":\"setGreeting\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_changedGreet\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Hardhat (and DeFi Wonderland)\",\"custom:experimental\":\"This is an experimental contract.\",\"details\":\"This is just a try out\",\"kind\":\"dev\",\"methods\":{\"setGreeting(string)\":{\"details\":\"Some explanation only defined for devs\",\"params\":{\"_greeting\":\"The greeting to be used\"},\"returns\":{\"_changedGreet\":\"Was greeting changed or nah\"}}},\"title\":\"A contract for boilerplating\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setGreeting(string)\":{\"notice\":\"Sets greeting that will be used during greet\"}},\"notice\":\"You can use this contract for only the most basic tests\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Greeter.sol\":\"Greeter\"},\"evmVersion\":\"istanbul\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Greeter.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.4;\\n\\n\\n\\n/// @title A contract for boilerplating\\n/// @author Hardhat (and DeFi Wonderland)\\n/// @notice You can use this contract for only the most basic tests\\n/// @dev This is just a try out\\n/// @custom:experimental This is an experimental contract.\\n\\ncontract Greeter {\\n  event GreetingSet(string _greeting);\\n\\n  string public greeting;\\n\\n  constructor(string memory _greeting) {\\n\\n    greeting = _greeting;\\n  }\\n\\n  function greet() public view returns (string memory) {\\n    return greeting;\\n  }\\n\\n  /// @notice Sets greeting that will be used during greet\\n  /// @dev Some explanation only defined for devs\\n  /// @param _greeting The greeting to be used\\n  /// @return _changedGreet Was greeting changed or nah\\n  function setGreeting(string memory _greeting) public returns (bool _changedGreet) {\\n    require(bytes(_greeting).length > 0, 'Greeter: empty greeting');\\n\\n    greeting = _greeting;\\n    _changedGreet = true;\\n    emit GreetingSet(_greeting);\\n  }\\n}\\n\",\"keccak256\":\"0xdcf60953802a4d97095262391eda84fe921127f2adf4fb7d534f50cf7e2ae542\",\"license\":\"Unlicense\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161067d38038061067d83398101604081905261002f916100e2565b8051610042906000906020840190610049565b50506101fc565b828054610055906101ab565b90600052602060002090601f01602090048101928261007757600085556100bd565b82601f1061009057805160ff19168380011785556100bd565b828001600101855582156100bd579182015b828111156100bd5782518255916020019190600101906100a2565b506100c99291506100cd565b5090565b5b808211156100c957600081556001016100ce565b600060208083850312156100f4578182fd5b82516001600160401b038082111561010a578384fd5b818501915085601f83011261011d578384fd5b81518181111561012f5761012f6101e6565b604051601f8201601f19908116603f01168101908382118183101715610157576101576101e6565b81604052828152888684870101111561016e578687fd5b8693505b8284101561018f5784840186015181850187015292850192610172565b8284111561019f57868684830101525b98975050505050505050565b600181811c908216806101bf57607f821691505b602082108114156101e057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6104728061020b6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063a413686214610046578063cfae32171461006e578063ef690cc014610083575b600080fd5b6100596100543660046102ee565b61008b565b60405190151581526020015b60405180910390f35b610076610135565b6040516100659190610398565b6100766101c7565b6000808251116100e15760405162461bcd60e51b815260206004820152601760248201527f477265657465723a20656d707479206772656574696e67000000000000000000604482015260640160405180910390fd5b81516100f4906000906020850190610255565b50600190507fad181ee258ff92d26bf7ed2e6b571ef1cba3afc45f028b863b0f02adaffc2f06826040516101289190610398565b60405180910390a1919050565b606060008054610144906103eb565b80601f0160208091040260200160405190810160405280929190818152602001828054610170906103eb565b80156101bd5780601f10610192576101008083540402835291602001916101bd565b820191906000526020600020905b8154815290600101906020018083116101a057829003601f168201915b5050505050905090565b600080546101d4906103eb565b80601f0160208091040260200160405190810160405280929190818152602001828054610200906103eb565b801561024d5780601f106102225761010080835404028352916020019161024d565b820191906000526020600020905b81548152906001019060200180831161023057829003601f168201915b505050505081565b828054610261906103eb565b90600052602060002090601f01602090048101928261028357600085556102c9565b82601f1061029c57805160ff19168380011785556102c9565b828001600101855582156102c9579182015b828111156102c95782518255916020019190600101906102ae565b506102d59291506102d9565b5090565b5b808211156102d557600081556001016102da565b6000602082840312156102ff578081fd5b813567ffffffffffffffff80821115610316578283fd5b818401915084601f830112610329578283fd5b81358181111561033b5761033b610426565b604051601f8201601f19908116603f0116810190838211818310171561036357610363610426565b8160405282815287602084870101111561037b578586fd5b826020860160208301379182016020019490945295945050505050565b6000602080835283518082850152825b818110156103c4578581018301518582016040015282016103a8565b818111156103d55783604083870101525b50601f01601f1916929092016040019392505050565b600181811c908216806103ff57607f821691505b6020821081141561042057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220eaa40486f945d1c48d21f7787ce3572b87b8ac96862a678c34404b290a49091c64736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063a413686214610046578063cfae32171461006e578063ef690cc014610083575b600080fd5b6100596100543660046102ee565b61008b565b60405190151581526020015b60405180910390f35b610076610135565b6040516100659190610398565b6100766101c7565b6000808251116100e15760405162461bcd60e51b815260206004820152601760248201527f477265657465723a20656d707479206772656574696e67000000000000000000604482015260640160405180910390fd5b81516100f4906000906020850190610255565b50600190507fad181ee258ff92d26bf7ed2e6b571ef1cba3afc45f028b863b0f02adaffc2f06826040516101289190610398565b60405180910390a1919050565b606060008054610144906103eb565b80601f0160208091040260200160405190810160405280929190818152602001828054610170906103eb565b80156101bd5780601f10610192576101008083540402835291602001916101bd565b820191906000526020600020905b8154815290600101906020018083116101a057829003601f168201915b5050505050905090565b600080546101d4906103eb565b80601f0160208091040260200160405190810160405280929190818152602001828054610200906103eb565b801561024d5780601f106102225761010080835404028352916020019161024d565b820191906000526020600020905b81548152906001019060200180831161023057829003601f168201915b505050505081565b828054610261906103eb565b90600052602060002090601f01602090048101928261028357600085556102c9565b82601f1061029c57805160ff19168380011785556102c9565b828001600101855582156102c9579182015b828111156102c95782518255916020019190600101906102ae565b506102d59291506102d9565b5090565b5b808211156102d557600081556001016102da565b6000602082840312156102ff578081fd5b813567ffffffffffffffff80821115610316578283fd5b818401915084601f830112610329578283fd5b81358181111561033b5761033b610426565b604051601f8201601f19908116603f0116810190838211818310171561036357610363610426565b8160405282815287602084870101111561037b578586fd5b826020860160208301379182016020019490945295945050505050565b6000602080835283518082850152825b818110156103c4578581018301518582016040015282016103a8565b818111156103d55783604083870101525b50601f01601f1916929092016040019392505050565b600181811c908216806103ff57607f821691505b6020821081141561042057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220eaa40486f945d1c48d21f7787ce3572b87b8ac96862a678c34404b290a49091c64736f6c63430008040033",
  "devdoc": {
    "author": "Hardhat (and DeFi Wonderland)",
    "custom:experimental": "This is an experimental contract.",
    "details": "This is just a try out",
    "kind": "dev",
    "methods": {
      "setGreeting(string)": {
        "details": "Some explanation only defined for devs",
        "params": {
          "_greeting": "The greeting to be used"
        },
        "returns": {
          "_changedGreet": "Was greeting changed or nah"
        }
      }
    },
    "title": "A contract for boilerplating",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "setGreeting(string)": {
        "notice": "Sets greeting that will be used during greet"
      }
    },
    "notice": "You can use this contract for only the most basic tests",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/Greeter.sol:Greeter",
        "label": "greeting",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}
